# Generated by Django 5.0.7 on 2024-07-29 16:12

import django.db.models.deletion
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'categories1',
            },
        ),
        migrations.CreateModel(
            name='Category2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'categories2',
            },
        ),
        migrations.CreateModel(
            name='Category3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'categories3',
            },
        ),
        migrations.CreateModel(
            name='Category4',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'categories4',
            },
        ),
        migrations.CreateModel(
            name='Category5',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'categories5',
            },
        ),
        migrations.CreateModel(
            name='Rubric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='RubricSpruch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='TypOfBlogPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', tinymce.models.HTMLField(blank=True, default='', null=True)),
                ('contentshort', tinymce.models.HTMLField(blank=True, default='', null=True)),
                ('banner_bild', models.ImageField(default='huenni_blog/default.jpg', upload_to='huenni_blog')),
                ('content_attachment', models.FileField(default='huenni_blog/default.jpg', upload_to='huenni_blog')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('published_date', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category1', models.ManyToManyField(related_name='posts', to='huenni_blog.category1')),
                ('category2', models.ManyToManyField(related_name='posts', to='huenni_blog.category2')),
                ('category3', models.ManyToManyField(blank=True, related_name='posts', to='huenni_blog.category3')),
                ('category4', models.ManyToManyField(blank=True, related_name='posts', to='huenni_blog.category4')),
                ('category5', models.ManyToManyField(blank=True, related_name='posts', to='huenni_blog.category5')),
                ('rubric', models.ManyToManyField(related_name='posts', to='huenni_blog.rubric')),
                ('TypOfBlogPage', models.ManyToManyField(related_name='posts', to='huenni_blog.typofblogpage')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=100)),
                ('comment', tinymce.models.HTMLField(default='')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('published_date', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='huenni_blog.post')),
            ],
        ),
        migrations.CreateModel(
            name='Spruch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('erfinder', models.CharField(max_length=200)),
                ('content', tinymce.models.HTMLField(blank=True, default='', null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('published_date', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('rubricspruch', models.ManyToManyField(related_name='posts', to='huenni_blog.rubricspruch')),
            ],
        ),
    ]
